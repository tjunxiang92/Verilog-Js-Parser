module main;  //module definition - no inputs or outputs


reg clk=0;           //define a 1 bit register.
reg rst = 0;  //initialize to zero, otherwise would be "x"--unknown.
wire [2:0] a;
test uut(clk, rst,a);

always             //always block has code that runs continuously.
                   //if only one statement in block, does not need begin/end.
  #1 clk=~clk;         //wait one time unit then invert a.
  
initial            //can have multiple initial blocks.
  $monitor ("Time = %d a = %d, Clock = %d",$time,a,clk);

initial
begin
  #1 rst = 1;
  #3 rst = 0;
  #20 $finish;     //finish after 20 time units
end
endmodule

module test(input clk, rst, output reg [2:0] a);

	always @ (posedge clk)
begin
if (rst)  begin
a <= 0;
end else begin
	a <= a + 1;
end
end
endmodule
